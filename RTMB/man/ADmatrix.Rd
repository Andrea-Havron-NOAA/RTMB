% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/00roxygen.R, R/S4methods.R
\name{ADmatrix}
\alias{ADmatrix}
\alias{expm,advector-method}
\alias{expm,adsparse-method}
\alias{dim,adsparse-method}
\alias{\%*\%,adsparse,ad-method}
\alias{\%*\%,ad,adsparse-method}
\alias{\%*\%,adsparse,adsparse-method}
\alias{\%*\%,ad,ad-method}
\alias{tcrossprod,advector,ANY-method}
\alias{crossprod,advector,ANY-method}
\alias{solve,advector,ad.-method}
\title{AD matrix methods (sparse and dense)}
\usage{
\S4method{expm}{advector}(x)

\S4method{expm}{adsparse}(x)

\S4method{dim}{adsparse}(x)

\S4method{\%*\%}{adsparse,ad}(x, y)

\S4method{\%*\%}{ad,adsparse}(x, y)

\S4method{\%*\%}{adsparse,adsparse}(x, y)

\S4method{\%*\%}{ad,ad}(x, y)

\S4method{tcrossprod}{advector,ANY}(x, y = NULL)

\S4method{crossprod}{advector,ANY}(x, y = NULL)

\S4method{solve}{advector,ad.}(a, b)
}
\arguments{
\item{x}{matrix (sparse or dense)}

\item{y}{matrix (sparse or dense)}

\item{a}{matrix}

\item{b}{matrix, vector or missing}
}
\description{
Matrices (\strong{base} package) and sparse matrices (\strong{Matrix} package) can be used inside the \code{RTMB} objective function as part of the calculations. Behind the scenes these R objects are converted to AD representations when needed. AD objects have a temporary lifetime, so you probably won't see them / need to know them. The only important thing is which \emph{methods} work for the objects.
}
\section{Functions}{
\itemize{
\item \code{expm(advector)}: AD matrix exponential

\item \code{expm(adsparse)}: AD matrix exponential

\item \code{dim(adsparse)}: AD sparse matrix dimension

\item \code{x \%*\% y}: AD matrix multiply

\item \code{x \%*\% y}: AD matrix multiply

\item \code{x \%*\% y}: AD matrix multiply

\item \code{x \%*\% y}: AD matrix multiply

\item \code{tcrossprod(x = advector, y = ANY)}: AD matrix multiply

\item \code{crossprod(x = advector, y = ANY)}: AD matrix multiply

\item \code{solve(a = advector, b = ad.)}: AD matrix inversion and solve

}}
\examples{
F <- MakeTape(function(x) matrix(1:9,3,3) \%*\% x, numeric(3))
F$jacobian(1:3)
F <- MakeTape(function(x) Matrix::expm(matrix(x,2,2)), numeric(4))
F$jacobian(1:4)
}
